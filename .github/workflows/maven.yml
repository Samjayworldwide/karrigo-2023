# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Karrigo2023 CICD Flow

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
         POSTGRES_PASSWORD: postgres
         POSTGRES_USER: postgres
         POSTGRES_DB: BlogTaskSecurity
        options: >-
           --health-cmd pg_isready
           --health-interval 10s
           --health-timeout 5s
           --health-retries 5
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Setup Config
      run: |
        echo 'spring.datasource.url=jdbc:postgresql://localhost:5432/karri_go_db' > src/main/resources/application.yml
    - name: Build with Maven
      run: mvn clean install -B

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: samjayworldwide/taskhub:latest

    - name: Build and Deploy Docker Containers
      run: |
        docker-compose -f docker-compose.yml up -d

    - name: Wait for Docker containers to start
      run: sleep 30

    - name: Run tests against deployed containers
      run: mvn verify -P integration-tests -B

    - name: Clean up
      run: |
        docker-compose -f docker-compose.yml down
